apiVersion: v1
kind: Service
metadata:
  name: cloudpebble-frontend
spec:
  type: NodePort
  selector:
    app: cloudpebble-frontend
  ports:
  - protocol: TCP
    port: 23451
    targetPort: 8080
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: cloud-rebble-io
spec:
  secretName: cloud-rebble-com-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: cloud.rebble.io
  acme:
    config:
    - dns01:
        provider: cloudflare-dns
      domains:
      - cloud.rebble.io
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: cloudpebble-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: cloudpebble-frontend-ip
spec:
  tls:
  - secretName: cloud-rebble-com-tls
  backend:
    serviceName: cloudpebble-frontend
    servicePort: 23451
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudpebble-frontend-deployment
  labels:
    app: cloudpebble-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudpebble-frontend
  template:
    metadata:
      labels:
        app: cloudpebble-frontend
    spec:
      containers:
      -  name: cloudpebble-frontend
         image: gcr.io/cloudrebble-k8s/cloudpebble:0.0.3
         command: ["gunicorn", "-c", "gunicorn.py", "cloudpebble.wsgi"]
         ports:
         - containerPort: 8080
         livenessProbe:
          httpGet:
            path: /
            port: 8080
         env:
         - name: PORT
           value: "8080"
         - name: REDIS_URL
           value: redis://10.0.0.4/
         - name: AWS_ENABLED
           value: "1"
         - name: AWS_S3_HOST
           value: storage.googleapis.com
         - name: AWS_S3_SOURCE_BUCKET
           value: rebble-cloudpebble-source
         - name: AWS_S3_BUILDS_BUCKET
           value: rebble-cloudpebble-builds
         - name: AWS_S3_EXPORT_BUCKET
           value: rebble-cloudpebble-export
         - name: AWS_ACCESS_KEY_ID
           valueFrom:
            secretKeyRef:
              name: cloudpebble-s3-keys
              key: access
         - name: AWS_SECRET_ACCESS_KEY
           valueFrom:
            secretKeyRef:
              name: cloudpebble-s3-keys
              key: secret
         - name: DATABASE_URL
           valueFrom:
            secretKeyRef:
              name: cloudpebble-db-url
              key: url
         - name: GITHUB_ID
           valueFrom:
            secretKeyRef:
              name: github-token
              key: id
         - name: GITHUB_SECRET
           valueFrom:
            secretKeyRef:
              name: github-token
              key: secret
         - name: PEBBLE_AUTH_URL
           value: https://auth.rebble.io
         - name: PEBBLE_AUTH_KEY
           valueFrom:
            secretKeyRef:
              name: rebble-auth-keys
              key: id
         - name: PEBBLE_AUTH_SECRET
           valueFrom:
            secretKeyRef:
              name: rebble-auth-keys
              key: secret
      - name: frontend-cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=cloudrebble-k8s:us-central1:cloudpebble-db=tcp:5432",
                  "-credential_file=/secrets/cloudsql/cloudrebble-k8s-511ff76c5b00.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudpebble-worker-deployment
  labels:
    app: cloudpebble-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudpebble-worker
  template:
    metadata:
      labels:
        app: cloudpebble-worker
    spec:
      containers:
      -  name: cloudpebble-worker
         image: gcr.io/cloudrebble-k8s/cloudpebble:0.0.3
         command: ["python", "manage.py", "celeryd", "-E", "-l", "info"]
         env:
         - name: REDIS_URL
           value: redis://10.0.0.4/
         - name: AWS_ENABLED
           value: "1"
         - name: AWS_S3_HOST
           value: storage.googleapis.com
         - name: AWS_S3_SOURCE_BUCKET
           value: rebble-cloudpebble-source
         - name: AWS_S3_BUILDS_BUCKET
           value: rebble-cloudpebble-builds
         - name: AWS_S3_EXPORT_BUCKET
           value: rebble-cloudpebble-export
         - name: AWS_ACCESS_KEY_ID
           valueFrom:
            secretKeyRef:
              name: cloudpebble-s3-keys
              key: access
         - name: AWS_SECRET_ACCESS_KEY
           valueFrom:
            secretKeyRef:
              name: cloudpebble-s3-keys
              key: secret
         - name: DATABASE_URL
           valueFrom:
            secretKeyRef:
              name: cloudpebble-db-url
              key: url
         - name: GITHUB_ID
           valueFrom:
            secretKeyRef:
              name: github-token
              key: id
         - name: GITHUB_SECRET
           valueFrom:
            secretKeyRef:
              name: github-token
              key: secret
         - name: PEBBLE_AUTH_URL
           value: https://auth.rebble.io
         - name: PEBBLE_AUTH_KEY
           valueFrom:
            secretKeyRef:
              name: rebble-auth-keys
              key: id
         - name: PEBBLE_AUTH_SECRET
           valueFrom:
            secretKeyRef:
              name: rebble-auth-keys
              key: secret
         - name: C_FORCE_ROOT
           value: "1"
      - name: frontend-cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=cloudrebble-k8s:us-central1:cloudpebble-db=tcp:5432",
                  "-credential_file=/secrets/cloudsql/cloudrebble-k8s-511ff76c5b00.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
